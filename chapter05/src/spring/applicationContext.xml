<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-4.3.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">


	
	<!-- 위 의 코드를 db.properties를 이용한 코드 어디에있는지 알려줘야한다 -->
	<context:property-placeholder location="classpath:spring/db.properties"/>
	<!-- transactionManager를 사용하려면 어노테이션 태그로 사용한다고 선언, 설정해놔야 쓸수 있다  -->
	<tx:annotation-driven transaction-manager="transactionManager"/> <!-- tx 어노테이션은 이걸쓰겟다고 알려주는것이다 -->
	
	<!-- 데이터소스 얻고 바로 아래로가서 -->
	<bean id="dataSource" class="org.apache.commons.dbcp2.BasicDataSource">
		<property name="driverClassName" value="${jdbc.driver}"/>
		<property name="url" value="${jdbc.url}"/>
		<property name="username" value="${jdbc.username}"/>
		<property name="password" value="${jdbc.password}"/>
		<property name="maxTotal" value="20"/>
		<property name="maxIdle" value="3"/>
	</bean>
	
	<!-- SqlSessionFactory 생성하고 바로아래에서,  예전 DAO에 있던것-->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="configLocation" value="classpath:spring/mybatis-config.xml"/><!-- mybatis 위치 알려줌 -->
		<!-- <property name="mapperLocations" value="classpath:user/dao/userMapper.xml"/> --><!-- 매퍼는 뻇겨도 되고 마이바티스 컨피그에 써줘도 된다 써저있음 -->
		<property name="dataSource" ref="dataSource"/> <!-- 세터로 데이타 소스갖음 mapper파일의 역할을 스프링이 뺏어감 -->
		
	</bean>
	
	<!-- SqlSession 생성, 예전 DAO에 있던것-->
	<bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg ref="sqlSessionFactory"/>
	</bean>
	
	<!-- Transaction(commit close 같은것들) -->
	<!-- 커밋할필요가 없어짐 자기가 다 알아서한다 -->
	<!-- userDAOMybatis 에 @Transaction 해줌-->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<constructor-arg ref="dataSource"/>
	</bean>

	<!-- insert -->
	<bean id="userInsertService" class="user.service.UserInsertService">
		<property name="userDTO" ref="userDTO"/>
		<property name="userDAO" ref="userDAOMybatis"/>
	</bean>
	
	<!-- select -->
	<bean id="userSelectService" class="user.service.UserSelectService">
		<property name="userDAO" ref="userDAOMybatis"></property>
	</bean>
	
	<!-- update -->
	<bean id="userUpdateService" class="user.service.UserUpdateService">
		<property name="userDAO" ref="userDAOMybatis"></property>
	</bean>
	
	<!-- delete -->
	<bean id="userDeleteService" class="user.service.UserDeleteService">
		<property name="userDAO" ref="userDAOMybatis"></property>
	</bean>
	
	<!-- DTO -->
	<bean id="userDTO" class="user.bean.UserDTO"></bean>
	
	
	<!-- 프로퍼티는 세터(setDataSource)찾는 메소드인데 userDAOImpl에는 setter가없으므로 부모인 NamedParameterJdbcDaoSupport로 간다 -->
	<bean id="userDAOMybatis" class="user.dao.UserDAOMybatis">
		<property name="sqlSession" ref="sqlSession"></property>
	</bean>
</beans>
